pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }

 stages {

  

    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/nrjydv1997/ultimate-cicd.git'
      }
    }

    stage("Build and test"){
      steps{
       sh 'ls -ltr'
        sh 'cd ultimate-cicd/spring-boot-app && mvn clean package'
      }
    }

    stage("Static code analysis"){
      environment{
        SONAR_URL = "http://3.108.53.187:9000"
      }
      steps{
        withCredentials([string(credentialsId: 'sonarqube', variable: 'sonarqubeid')]) {
          echo 'analysys done'
         // sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$sonarqubeid -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }

    stage("Build and push docker image"){
      environment{
        DOCKER_IMAGE="nrjydv1997/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script{
          sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE}'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('',REGISTRY_CREDENTIALS){
            dockerImage.push()
          }
        }
      }
    }
  }
}
